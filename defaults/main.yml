# First if we want to bypass iptables config
# Default: true, can be false
manage_iptables: True

# This role will cover both ipv4 and ipv6 so take that into account
# Some vars are specific to one or the other

# IPv4 default variables
# sshd tuning : ideally not wide-open, so you can restrict through list
# Default for the role to wide-open
iptables_sshd_allowed_from:
  - 0.0.0.0/0

# Local iptables rules not defined by roles
# Not present by default, so skipped by iptables task/main.yml
# protocol default: tcp
# you can also define protocol: '' and it would mean ANY
# source default: 0.0.0.0/0
# you can also define source: '' and it would mean *
# iptables_local_input_rules:
#   - source: 192.168.0.0/24
#     dport: 80
#     protocol: tcp
#   - dport: 25  # would open for all tcp/25  
#   - protocol: ''
#     source: ''
#     destination: 225.0.0.50  # opens all just for that destination ip, multicast in this case

# if the node is a firewall/gateway
iptables_gw: false

# The "internal" interface of the gateway
iptables_gw_internal_iface: eth1

# The "external" interface of the gateway
iptables_gw_external_iface: eth0

# Default chain policies. This is only active on the filter table
iptables_default_input_policy: ACCEPT
iptables_default_forward_policy: ACCEPT
iptables_default_output_policy: ACCEPT

# Add a default reject footer (you can do the same by setting the
# default_*_policy for the chains. This is here to support backwards compat
# with current systems that add a REJECT stanza for the INPUT and FORWARD
# chains
iptables_default_reject_footer: true


# if it's a gw, what do we forward/allow (lists)
iptables_forward_allow:
  - source: "192.168.0.0/24"
    destination: "0.0.0.0/24"
    protocol: tcp
    dport: 80
iptables_nat_postrouting_allow:
  - source: "192.168.0.0/24"
    destination: "0.0.0.0/24"
    protocol: tcp

# DNAT and port-forwarding
# default is empty list, but we can have something like
# iptables_nat_prerouting_allow:
#   - source: "0.0.0.0/0"
#     dport: 8080
#     dest_host_port: "192.168.122.2:80"
# In this case, don't forget to add it in the iptables_forward_allow rules or it would be blocked
# iptables_forward_allow:
#   - source: "0.0.0.0/0"
#     destination: 192.168.122.2
#     protocol: tcp
#     dport: 80
iptables_nat_prerouting_allow: []

# Local redirect from port to other port
# iptables_redirects:
#   - dport: 10054
#     lport: 10050
# Redirect tcp/10054 to local tcp/10050
iptables_redirects: []

# For iptables_nat_postrouting_allow we can also specify the action :
#   action: ACCEPT #it defaults to MASQUERADE
 
# Docker host ? (for the docker specific nat rules
iptables_docker_host: false

# Ipset rules
# By default we have already one centos ipset list
# but we can also have some coming from various sources and updated automatically, like from firehol
# example:
# ipset_block_lists:
#   - name: country-belgium
#     url: http://ipdeny.com/ipblocks/data/aggregated/be-aggregated.zone
#     type: hash:net
#   - name: php_spammers-7d
#     url: https://iplists.firehol.org/files/php_spammers_7d.ipset
#     type: hash:net

ipset_block_lists: []

##############################
# IPv6 default variables
##############################

ip6tables_gw: False

ip6tables_sshd_allowed_from:
  - "::/0"

# IPv6 gateway forward rules - all by default
ip6tables_forward_allow:
  - source: "::/0"
    destination: "::/0"
